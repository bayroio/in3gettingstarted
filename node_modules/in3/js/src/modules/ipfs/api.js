"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * simple API for IPFS
 */
class IpfsAPI {
    constructor(_client) {
        this.client = _client;
    }
    /**
     * retrieves the conent for a hash from IPFS.
     * @param hash  the IPFS-hash to fetch
     * @param resultEncoding the internal encoding to use
     *
     */
    get(hash, resultEncoding) {
        return this.client.sendRPC('ipfs_get', [hash, resultEncoding || 'base64'], '0x7d0')
            .then(response => response.result ? Buffer.from(response.result, (resultEncoding || 'base64')) : Promise.reject(new Error(response.error || 'Hash not found')));
    }
    /**
     * stores the data on ipfs and returns the IPFS-Hash.
     * @param data puts a IPFS content
     * @param dataEncoding
     */
    put(data, dataEncoding) {
        return this.client.sendRPC('ipfs_put', [data.toString(dataEncoding || 'base64'), (dataEncoding || 'base64')], '0x7d0').then(response => response.result ? response.result : Promise.reject(new Error(response.error || 'Hash not found')));
    }
}
exports.default = IpfsAPI;
//# sourceMappingURL=api.js.map